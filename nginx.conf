server {
    listen 80;
    server_name dropapp.fr www.dropapp.fr;
    
    # Redirect HTTP to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name dropapp.fr www.dropapp.fr;

    # SSL configuration (Let's Encrypt will add these paths)
    ssl_certificate /etc/letsencrypt/live/dropapp.fr/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/dropapp.fr/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Application reverse proxy
    location / {
        # First try to serve static files from public directory
        root /var/www/drops-backend/public;
        try_files $uri $uri/ @api;
    }

    # API proxy
    location @api {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Static files handling
    location /uploads {
        alias /var/www/drops-backend/uploads;
        expires 30d;
        add_header Cache-Control "public, no-transform";
    }

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Maximum upload size
    client_max_body_size 5M;

    # Error logs
    error_log /var/log/nginx/drops-backend-error.log;
    access_log /var/log/nginx/drops-backend-access.log;
}